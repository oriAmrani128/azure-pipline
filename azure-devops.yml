trigger:
  - main
  - develop

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'
  version: '1.0.$(Build.BuildId)'

steps:
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '7.0.x'

- script: 'echo "Current version: $(version)"'
  displayName: 'Print version to console'

- script: echo "##vso[build.updatebuildnumber]$(version)"
  displayName: 'Set build number'

- script: dotnet build --configuration $(buildConfiguration)
  displayName: 'Build the project'

- script: dotnet run
  displayName: 'Run the project'

- script: echo "##vso[task.setvariable variable=branchName]$(Build.SourceBranchName)"
  displayName: 'Set branch name variable'


- task: Docker@2
  displayName: 'Build Docker Image'
  inputs:
    command: build
    Dockerfile: '**/Dockerfile'
    tags: |
      $(DOCKER_USERNAME)/hello-world-dotnet:$(branchName)_$(version)

- task: Docker@2
  displayName: 'Login to Docker Hub'
  inputs:
    command: login
    containerRegistry: '' # אם אין לך Service Connection מוגדר, השאר ריק
    username: '$(DOCKER_USERNAME)'
    password: '$(DOCKER_PASSWORD)'

### 🟠 Docker Push
- task: Docker@2
  displayName: 'Push Docker Image'
  inputs:
    command: push
    tags: |
      $(DOCKER_USERNAME)/hello-world-dotnet:$(branchName)_$(version)

### 📦 NuGet Package
- script: dotnet pack --configuration $(buildConfiguration) -p:PackageVersion=$(version) -o $(Build.ArtifactStagingDirectory)
  displayName: 'Pack the project'

### 📤 Publish as artifact
- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: '$(branchName)_$(version)'
