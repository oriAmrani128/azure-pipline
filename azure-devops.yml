trigger:
  - main
  - develop

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'
  version: '1.0.$(Build.BuildId)'
  dockerRegistryServiceConnection: 'your-dockerhub-service-connection' # שנה בהתאם לשם שלך
  imageRepository: 'yourdockerhubuser/weatherapp'
  tag: '$(Build.BuildId)'

steps:
### ✅ .NET Build
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '7.0.x'

- script: 'echo "Current version: $(version)"'
  displayName: 'Print version to console'

- script: echo "##vso[build.updatebuildnumber]$(version)"
  displayName: 'Set build number'

- script: dotnet build --configuration $(buildConfiguration)
  displayName: 'Build the project'

- script: dotnet run
  displayName: 'Run the project'

- script: echo "##vso[task.setvariable variable=branchName]$(Build.SourceBranchName)"
  displayName: 'Set branch name variable'

### 📦 Pack NuGet
- script: dotnet pack --configuration $(buildConfiguration) -p:PackageVersion=$(version) -o $(Build.ArtifactStagingDirectory)
  displayName: 'Pack the project'

- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: '$(branchName)_$(version)'


### 🔐 Download kubeconfig (from Secure Files)
- task: DownloadSecureFile@1
  name: downloadKubeconfig
  inputs:
    secureFile: local.yaml

### 🧠 Set kubeconfig for kubectl
- script: |
    mkdir -p ~/.kube
    cp "$(downloadKubeconfig.secureFilePath)" ~/.kube/config
    echo "Kubeconfig set"
  displayName: 'Set up kubeconfig'

### 🚀 Deploy to Rancher
- script: |
    kubectl apply -f weatherapp-deployment.yaml
    kubectl apply -f weatherapp-service.yaml
  displayName: 'Deploy to Rancher'
